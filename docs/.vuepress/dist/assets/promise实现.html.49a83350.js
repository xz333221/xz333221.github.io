import{_ as n,c as s}from"./app.331a3634.js";const a={},p=s(`<h1 id="promise\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#promise\u5B9E\u73B0" aria-hidden="true">#</a> promise\u5B9E\u73B0</h1><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token constant">PENDING</span> <span class="token operator">=</span> <span class="token string">&#39;pending&#39;</span> <span class="token comment">// \u7B49\u5F85</span>\r
<span class="token keyword">const</span> <span class="token constant">FULFILLED</span> <span class="token operator">=</span> <span class="token string">&#39;fulfilled&#39;</span> <span class="token comment">// \u6210\u529F</span>\r
<span class="token keyword">const</span> <span class="token constant">REJECTED</span> <span class="token operator">=</span> <span class="token string">&#39;rejected&#39;</span> <span class="token comment">// \u5931\u8D25</span>\r
<span class="token keyword">class</span> <span class="token class-name">MyPromise</span> <span class="token punctuation">{</span>\r
  <span class="token function">constructor</span> <span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
    <span class="token function">fn</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>resolve<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>reject<span class="token punctuation">)</span>\r
  <span class="token punctuation">}</span>\r
\r
  value <span class="token operator">=</span> <span class="token keyword">undefined</span>\r
  reason <span class="token operator">=</span> <span class="token keyword">undefined</span>\r
  status <span class="token operator">=</span> <span class="token constant">PENDING</span>\r
  success_cb_arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\r
  error_cb_arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\r
\r
  <span class="token function-variable function">resolve</span> <span class="token operator">=</span> <span class="token parameter">value</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token constant">PENDING</span><span class="token punctuation">)</span> <span class="token keyword">return</span>\r
    <span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token constant">FULFILLED</span>\r
    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value\r
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>success_cb_arr<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">.</span>success_cb_arr<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>\r
  <span class="token punctuation">}</span>\r
\r
  <span class="token function-variable function">reject</span> <span class="token operator">=</span> <span class="token parameter">reason</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token constant">PENDING</span><span class="token punctuation">)</span> <span class="token keyword">return</span>\r
    <span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token constant">REJECTED</span>\r
    <span class="token keyword">this</span><span class="token punctuation">.</span>reason <span class="token operator">=</span> reason\r
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>error_cb_arr<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">.</span>error_cb_arr<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span>\r
  <span class="token punctuation">}</span>\r
\r
  <span class="token function">then</span> <span class="token punctuation">(</span><span class="token parameter">success_fn<span class="token punctuation">,</span> err_fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
    <span class="token keyword">switch</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status<span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
      <span class="token keyword">case</span> <span class="token constant">FULFILLED</span><span class="token operator">:</span>\r
        <span class="token keyword">if</span> <span class="token punctuation">(</span>success_fn<span class="token punctuation">)</span> <span class="token function">success_fn</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span>\r
        <span class="token keyword">break</span>\r
      <span class="token keyword">case</span> <span class="token constant">REJECTED</span><span class="token operator">:</span>\r
        <span class="token keyword">if</span> <span class="token punctuation">(</span>err_fn<span class="token punctuation">)</span> <span class="token function">err_fn</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>reason<span class="token punctuation">)</span>\r
        <span class="token keyword">break</span>\r
      <span class="token keyword">default</span><span class="token operator">:</span>\r
        <span class="token keyword">if</span> <span class="token punctuation">(</span>success_fn<span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">.</span>success_cb_arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>success_fn<span class="token punctuation">)</span>\r
        <span class="token keyword">if</span> <span class="token punctuation">(</span>err_fn<span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">.</span>error_cb_arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>err_fn<span class="token punctuation">)</span>\r
    <span class="token punctuation">}</span>\r
    <span class="token keyword">return</span> <span class="token keyword">this</span>\r
  <span class="token punctuation">}</span>\r
\r
  <span class="token keyword">catch</span> <span class="token punctuation">(</span>err_fn<span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">REJECTED</span> <span class="token operator">&amp;&amp;</span> err_fn<span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
      <span class="token function">err_fn</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>reason<span class="token punctuation">)</span>\r
      <span class="token keyword">return</span>\r
    <span class="token punctuation">}</span>\r
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">PENDING</span> <span class="token operator">&amp;&amp;</span> err_fn<span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
      <span class="token keyword">this</span><span class="token punctuation">.</span>error_cb_arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>err_fn<span class="token punctuation">)</span>\r
    <span class="token punctuation">}</span>\r
  <span class="token punctuation">}</span>\r
<span class="token punctuation">}</span>\r
\r
<span class="token keyword">const</span> my_promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyPromise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">if</span> <span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0.5</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span>\r
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span>\r
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\r
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
      <span class="token function">reject</span><span class="token punctuation">(</span><span class="token number">456</span><span class="token punctuation">)</span>\r
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>\r
  <span class="token punctuation">}</span>\r
<span class="token punctuation">}</span><span class="token punctuation">)</span>\r
my_promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">res ==&gt; </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> res<span class="token punctuation">)</span>\r
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">err ==&gt; </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>\r
<span class="token punctuation">}</span><span class="token punctuation">)</span>\r
my_promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">res222 ==&gt; </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> res<span class="token punctuation">)</span>\r
<span class="token punctuation">}</span><span class="token punctuation">)</span>\r
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br></div></div>`,2);function t(e,o){return p}var l=n(a,[["render",t],["__file","promise\u5B9E\u73B0.html.vue"]]);export{l as default};
